@using System.Text
@inject NavigationManager NavigationManager
<MudBreadcrumbs Items="_items" Separator=">"></MudBreadcrumbs>



@code {

    [Parameter] public string CurrentPage { get; set; } = null!;

    private List<BreadcrumbItem> _items = new List<BreadcrumbItem>();


    protected override void OnParametersSet()
    {
        _items = new List<BreadcrumbItem>();
        var path = NavigationManager.ToBaseRelativePath(CurrentPage);
        var urlParts = path.Split('/', StringSplitOptions.RemoveEmptyEntries);
        if (urlParts.Length > 0)
            _items.Add(new BreadcrumbItem("Home", NavigationManager.BaseUri));

        var currentUrl = new StringBuilder();
        for (int i = 0; i < urlParts.Length; i++)
        {
            var item = urlParts[i];
            if (currentUrl.Length >0)
                currentUrl.Append("/"+item);
            else
                currentUrl.Append(item);

            var breadCrumb = GetBreadcrumb(item, currentUrl.ToString(), isLastItem: i == urlParts.Length - 1);
            if (breadCrumb is null) continue;
            _items.Add(breadCrumb);
        }
    }

    private static BreadcrumbItem? GetBreadcrumb(string path, string currentUri, bool isLastItem)
    {
        if (!ApplicationConstants.BreadCrumbLabelsAndLinks.TryGetValue(path, out var value)) return null;
        return new BreadcrumbItem(value.label, currentUri, disabled: isLastItem ? true : !value.valid);
    }
}